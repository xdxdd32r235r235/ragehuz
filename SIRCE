local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
 
local plr = Players.LocalPlayer
local keys = {W = false, A = false, S = false, D = false}
 
local flyEnabled = false
local cframeMoveEnabled = false
local deathTpEnabled = false
local autoHitEnabled = false
local cframeSpeed = 0.2
local checkpointCFrame = nil
 
-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SpeedFlyGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = game:GetService("CoreGui")
 
-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 280, 0, 220)
mainFrame.Position = UDim2.new(0.5, -140, 0.5, -110)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
mainFrame.Active = true
mainFrame.Draggable = true
 
-- Title
local titleLabel = Instance.new("TextLabel")
titleLabel.Text = "Rage Hub"
titleLabel.Size = UDim2.new(1, 0, 0, 25)
titleLabel.BackgroundTransparency = 1
titleLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 18
titleLabel.Parent = mainFrame
 
-- CFrame Speed label
local speedLabel = Instance.new("TextLabel")
speedLabel.Text = "CFrame Speed:"
speedLabel.Size = UDim2.new(1, -100, 0, 20)
speedLabel.Position = UDim2.new(0, 10, 0, 30)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
speedLabel.Font = Enum.Font.SourceSans
speedLabel.TextSize = 15
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.Parent = mainFrame
 
-- Speed input textbox
local speedInput = Instance.new("TextBox")
speedInput.Size = UDim2.new(0, 80, 0, 25)
speedInput.Position = UDim2.new(1, -90, 0, 28)
speedInput.Text = tostring(cframeSpeed)
speedInput.ClearTextOnFocus = false
speedInput.TextColor3 = Color3.fromRGB(220, 220, 255)
speedInput.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
speedInput.BorderSizePixel = 0
speedInput.Font = Enum.Font.SourceSans
speedInput.TextSize = 16
speedInput.Parent = mainFrame
 
-- CFrame Move toggle button
local cframeToggle = Instance.new("TextButton")
cframeToggle.Text = "CFrame Move: OFF"
cframeToggle.Size = UDim2.new(0, 260, 0, 30)
cframeToggle.Position = UDim2.new(0, 10, 0, 60)
cframeToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
cframeToggle.TextColor3 = Color3.fromRGB(230, 230, 255)
cframeToggle.Font = Enum.Font.SourceSansBold
cframeToggle.TextSize = 16
cframeToggle.Parent = mainFrame
 
-- Fly Platform toggle button
local flyToggle = Instance.new("TextButton")
flyToggle.Text = "Fly Platform: OFF (F)"
flyToggle.Size = UDim2.new(0, 260, 0, 30)
flyToggle.Position = UDim2.new(0, 10, 0, 100)
flyToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
flyToggle.TextColor3 = Color3.fromRGB(230, 230, 255)
flyToggle.Font = Enum.Font.SourceSansBold
flyToggle.TextSize = 16
flyToggle.Parent = mainFrame
 
-- Death TP toggle button
local deathTpToggle = Instance.new("TextButton")
deathTpToggle.Text = "Death TP: OFF"
deathTpToggle.Size = UDim2.new(0, 180, 0, 30)
deathTpToggle.Position = UDim2.new(0, 10, 0, 140)
deathTpToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
deathTpToggle.TextColor3 = Color3.fromRGB(230, 230, 255)
deathTpToggle.Font = Enum.Font.SourceSansBold
deathTpToggle.TextSize = 16
deathTpToggle.Parent = mainFrame
 
-- Question mark button next to Death TP
local deathTpQuestion = Instance.new("TextButton")
deathTpQuestion.Text = "?"
deathTpQuestion.Size = UDim2.new(0, 30, 0, 30)
deathTpQuestion.Position = UDim2.new(0, 195, 0, 140)
deathTpQuestion.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
deathTpQuestion.TextColor3 = Color3.fromRGB(255, 255, 255)
deathTpQuestion.Font = Enum.Font.SourceSansBold
deathTpQuestion.TextSize = 20
deathTpQuestion.Parent = mainFrame
 
-- Auto Hit toggle button
local autoHitToggle = Instance.new("TextButton")
autoHitToggle.Text = "Auto Hit: OFF"
autoHitToggle.Size = UDim2.new(0, 180, 0, 30)
autoHitToggle.Position = UDim2.new(0, 10, 0, 180)
autoHitToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
autoHitToggle.TextColor3 = Color3.fromRGB(230, 230, 255)
autoHitToggle.Font = Enum.Font.SourceSansBold
autoHitToggle.TextSize = 16
autoHitToggle.Parent = mainFrame
 
-- Question mark button next to Auto Hit
local autoHitQuestion = Instance.new("TextButton")
autoHitQuestion.Text = "?"
autoHitQuestion.Size = UDim2.new(0, 30, 0, 30)
autoHitQuestion.Position = UDim2.new(0, 195, 0, 180)
autoHitQuestion.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
autoHitQuestion.TextColor3 = Color3.fromRGB(255, 255, 255)
autoHitQuestion.Font = Enum.Font.SourceSansBold
autoHitQuestion.TextSize = 20
autoHitQuestion.Parent = mainFrame
 
-- Tooltip frame (hidden by default)
local tooltip = Instance.new("Frame")
tooltip.Size = UDim2.new(0, 260, 0, 120)
tooltip.Position = UDim2.new(0, 10, 0, 220)
tooltip.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
tooltip.BorderSizePixel = 0
tooltip.Visible = false
tooltip.Parent = mainFrame
 
local tooltipText = Instance.new("TextLabel")
tooltipText.Size = UDim2.new(1, -10, 1, -10)
tooltipText.Position = UDim2.new(0, 5, 0, 5)
tooltipText.BackgroundTransparency = 1
tooltipText.TextColor3 = Color3.fromRGB(220, 220, 255)
tooltipText.TextWrapped = true
tooltipText.Font = Enum.Font.SourceSans
tooltipText.TextSize = 14
tooltipText.Parent = tooltip
 
-- Platform for flying
local platform = Instance.new("Part")
platform.Size = Vector3.new(5, 1, 5)
platform.Anchored = true
platform.Transparency = 1
platform.CanCollide = true
platform.Name = "FlyPlatform"
platform.Parent = workspace
 
-- Toggles functions
local function toggleFly()
    flyEnabled = not flyEnabled
    platform.Transparency = flyEnabled and 0.5 or 1
    flyToggle.Text = "Fly Platform: " .. (flyEnabled and "ON (F)" or "OFF (F)")
end
 
local function toggleCFrameMove()
    cframeMoveEnabled = not cframeMoveEnabled
    cframeToggle.Text = "CFrame Move: " .. (cframeMoveEnabled and "ON" or "OFF")
end
 
local function toggleDeathTP()
    deathTpEnabled = not deathTpEnabled
    deathTpToggle.Text = "Death TP: " .. (deathTpEnabled and "ON" or "OFF")
end
 
local function toggleAutoHit()
    autoHitEnabled = not autoHitEnabled
    autoHitToggle.Text = "Auto Hit: " .. (autoHitEnabled and "ON" or "OFF")
end
 
-- User input tracking
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
 
    if deathTpEnabled then
        if input.UserInputType == Enum.UserInputType.MouseButton3 then -- Middle mouse click
            local char = plr.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            if hrp then
                checkpointCFrame = hrp.CFrame
                print("Checkpoint saved!")
            end
        end
 
        if input.KeyCode == Enum.KeyCode.T then
            local char = plr.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            if hrp and checkpointCFrame then
                hrp.CFrame = checkpointCFrame
                print("Teleported to checkpoint!")
            else
                print("No checkpoint saved yet!")
            end
        end
    end
 
    -- Other controls
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.W then keys.W = true end
        if input.KeyCode == Enum.KeyCode.A then keys.A = true end
        if input.KeyCode == Enum.KeyCode.S then keys.S = true end
        if input.KeyCode == Enum.KeyCode.D then keys.D = true end
 
        if input.KeyCode == Enum.KeyCode.F then
            toggleFly()
        end
    end
end)
 
UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.W then keys.W = false end
        if input.KeyCode == Enum.KeyCode.A then keys.A = false end
        if input.KeyCode == Enum.KeyCode.S then keys.S = false end
        if input.KeyCode == Enum.KeyCode.D then keys.D = false end
    end
end)
 
-- Speed input logic
speedInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local val = tonumber(speedInput.Text)
        if val and val > 0 then
            cframeSpeed = val
            speedInput.Text = tostring(cframeSpeed)
        else
            speedInput.Text = tostring(cframeSpeed)
        end
    end
end)
 
-- Toggle button connections
cframeToggle.MouseButton1Click:Connect(toggleCFrameMove)
flyToggle.MouseButton1Click:Connect(toggleFly)
deathTpToggle.MouseButton1Click:Connect(toggleDeathTP)
autoHitToggle.MouseButton1Click:Connect(toggleAutoHit)
 
-- Tooltip toggles
deathTpQuestion.MouseButton1Click:Connect(function()
    if tooltip.Visible and tooltipText.Text == "Death TP:\nFor this to work you need to stand in the location you want to set your checkpoint and press Middle mouse Wheel and then die (only from void) and in the second you spawn press t it will teleport you there." then
        tooltip.Visible = false
    else
        tooltip.Visible = true
        tooltipText.Text = "Death TP:\nFor this to work you need to stand in the location you want to set your checkpoint and press Middle mouse Wheel and then die (only from void) and in the second you spawn press t it will teleport you there."
    end
end)
 
autoHitQuestion.MouseButton1Click:Connect(function()
    if tooltip.Visible and tooltipText.Text == "Auto Hit:\nIt's not a kill aura.\nWhen you look at people in your range, it starts automatically hitting.\nIt's like an auto clicker without the annoying warning." then
        tooltip.Visible = false
    else
        tooltip.Visible = true
        tooltipText.Text = "Auto Hit:\nIt's not a kill aura.\nWhen you look at people in your range, it starts automatically hitting.\nIt's like an auto clicker without the annoying warning."
    end
end)
 
-- Fly platform position update and CFrame movement
RunService.Heartbeat:Connect(function()
    local char = plr.Character
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
 
    if flyEnabled then
        platform.Transparency = 0.5
        platform.Position = hrp.Position - Vector3.new(0, hrp.Size.Y/2 + 1, 0)
    else
        platform.Transparency = 1
    end
 
    if cframeMoveEnabled then
        local camera = workspace.CurrentCamera
        local moveDir = Vector3.new(0, 0, 0)
        if keys.W then moveDir = moveDir + camera.CFrame.LookVector end
        if keys.S then moveDir = moveDir - camera.CFrame.LookVector end
        if keys.A then moveDir = moveDir - camera.CFrame.RightVector end
        if keys.D then moveDir = moveDir + camera.CFrame.RightVector end
 
        moveDir = Vector3.new(moveDir.X, 0, moveDir.Z)
        if moveDir.Magnitude > 0 then
            moveDir = moveDir.Unit
            hrp.CFrame = hrp.CFrame + moveDir * cframeSpeed
        end
    end
end)
 
-- Auto Hit logic
local attackRange = 15
RunService.Heartbeat:Connect(function()
    if not autoHitEnabled then return end
    if not plr.Character then return end
 
    local tool = plr.Character:FindFirstChildOfClass("Tool")
    if not tool then return end
 
    local hrp = plr.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
 
    local enemyNearby = false
    local camera = workspace.CurrentCamera
 
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= plr and player.Character then
            local targetHRP = player.Character:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                local distance = (hrp.Position - targetHRP.Position).Magnitude
                if distance <= attackRange then
                    -- Check if player is roughly in camera's view direction (optional for "looking at")
                    local directionToTarget = (targetHRP.Position - hrp.Position).Unit
                    local lookVector = camera.CFrame.LookVector
                    local dot = directionToTarget:Dot(lookVector)
                    if dot > 0.5 then -- roughly within 60 degrees cone in front
                        enemyNearby = true
                        break
                    end
                end
            end
        end
    end
 
    if enemyNearby then
        tool:Activate()
    end
end)
